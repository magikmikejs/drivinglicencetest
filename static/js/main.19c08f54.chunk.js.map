{"version":3,"sources":["components/Menu.js","components/Home.js","components/TestMiddle.js","components/Result.js","components/Test.js","components/Loading.js","App.js","reportWebVitals.js","index.js"],"names":["Menu","className","to","Home","setLoading","img","name","link","map","category","index","onClick","onLoad","src","TestMiddle","minutes","seconds","wrongAnswersArray","setWrongAnswersArray","correctAnswerIndex","checkAnswer","wrongAnswers","changeQuestion","currentQuestion","usedQuestions","setComebackQuestions","comebackQuestions","answeredQuestions","setAnsweredQuestions","result","useState","step","setStep","undefined","answerIndex","setAnswerIndex","circleStyles","setCircleStyles","buttonStyle","setButtonStyle","barStyle","width","useEffect","length","style","question","answers","oldStyles","display","background","changeStyles","value","newQuestions","push","newStep","newWrongAnswers","newObj","questionIndex","yourAnswer","q","Result","renderMistakesOrResult","setRenderMistakesOrResult","correctAnswers","window","innerWidth","cy","cx","r","svgStyles","borderColor","changeStyle","correctPercentage","Math","floor","strokeDashoffset","stroke","strokeWidth","fill","answer","a","isCorrect","Test","params","returnRandom","random","returnUniqueQuestion","arr","isDuplicate","forEach","el","returnAnswerIndex","res","setMinutes","setSeconds","setCorrectAnswerIndex","setResult","setUsedQuestions","setCurrentQuestion","setWrongAnswers","setCorrectAnswers","fetchTest","path","axios","get","newUsedQuestions","data","console","log","timer","mins","secs","setInterval","clearInterval","deductTime","newQuestion","newArray","newComeback","usedLength","comebackLength","i","pop","removeFromArray","findIndexInArray","Loading","loading","App","exact","component","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19c08f54.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Menu() {\r\n    return (\r\n        <div className='menu'>\r\n          <Link to='/'><div className='logo'>LOGO</div></Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Home({ setLoading }) {\r\n\r\n    const categories = [\r\n        { img: 'http://localhost:5000/server/images/car', name: 'Car Test', link: '/quiz/car-test' },\r\n        { img: 'http://localhost:5000/server/images/van', name: 'Truck Test', link: '/quiz/truck-test' },\r\n        { img: 'http://localhost:5000/server/images/vespa', name: 'Motorcycle Test', link: '/quiz/motorcycle-test' }\r\n    ];\r\n\r\n    return (\r\n        <div className='home'>\r\n            <div className='home-h1'>\r\n              <h1>Move One Step Closer to Getting Your License!</h1>\r\n            </div>\r\n            <p>Practice your knowledge of the theoretical test here.</p>\r\n            <h3>Please select a category</h3>\r\n            <div className='grid'>\r\n              {categories.map((category, index) => {\r\n                  return (   \r\n                   <Link to={category.link} key={index + 5} onClick={()=>setLoading(true)}> \r\n                        <div className='grid-unit'>\r\n                                <div className='grid-image'>\r\n                                    <img onLoad={()=>setLoading(false)} src={category.img}></img>\r\n                                </div>\r\n                                <h1>\r\n                                {category.name}\r\n                                </h1>\r\n                        </div>\r\n                   </Link>\r\n                  )\r\n              })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState, useEffect, use } from 'react'\r\n\r\nfunction TestMiddle({\r\n    minutes,\r\n    seconds,\r\n    wrongAnswersArray,\r\n    setWrongAnswersArray,\r\n    correctAnswerIndex,\r\n    checkAnswer,\r\n    wrongAnswers,\r\n    changeQuestion, \r\n    currentQuestion,\r\n    usedQuestions, \r\n    setLoading,\r\n    setComebackQuestions,\r\n    comebackQuestions,\r\n    answeredQuestions,\r\n    setAnsweredQuestions,\r\n    result }) {\r\n\r\n    const [ step, setStep ] = useState(0);\r\n    const [ answerIndex, setAnswerIndex ] = useState(undefined);\r\n    const [ circleStyles, setCircleStyles ] = useState([{}, {}, {}]);\r\n    const [ buttonStyle, setButtonStyle ] = useState({});\r\n    const barStyle = {\r\n       width: 20*answeredQuestions + '%'\r\n    }\r\n \r\n    const changeStyles = index => {\r\n        if(answerIndex != index){\r\n            const newStyle = { display:'block' };\r\n            const oldStyles = [{}, {}, {}];\r\n            oldStyles[index] = {...newStyle};\r\n            setCircleStyles(oldStyles);\r\n            setButtonStyle({background: '#54A0FF'});\r\n            setAnswerIndex(index);\r\n        } else if(answerIndex === index) {\r\n            const oldStyles = [{}, {}, {}];\r\n            setCircleStyles(oldStyles);\r\n            setButtonStyle({background: '#d1d1d1'});\r\n            setAnswerIndex(undefined);\r\n        }\r\n    }\r\n\r\n    const addComebackQuestion = () => {\r\n        const newQuestions = comebackQuestions;\r\n        newQuestions.push(currentQuestion);\r\n        setComebackQuestions(newQuestions);\r\n        changeQuestion();\r\n    }\r\n\r\n    const giveResult = () => {\r\n        if(answerIndex === undefined){\r\n            return;\r\n        };\r\n        let newStep = step;\r\n        newStep++;\r\n        setStep(newStep);\r\n        if(newStep === 1) {\r\n            checkAnswer(answerIndex);\r\n            if(answerIndex != correctAnswerIndex) {\r\n                const newWrongAnswers = wrongAnswersArray;\r\n                const newObj = {\r\n                    questionIndex: currentQuestion,\r\n                    yourAnswer: answerIndex\r\n                }\r\n                newWrongAnswers.push(newObj);\r\n                setWrongAnswersArray(newWrongAnswers);\r\n            }\r\n        } else {\r\n            setAnsweredQuestions(q => q + 1);\r\n            setAnswerIndex(undefined);\r\n            changeQuestion();\r\n            setCircleStyles([{}, {}, {}]);\r\n            setButtonStyle({background:'#d1d1d1'});\r\n            setStep(0);\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(result.length > 0){\r\n            setLoading(false);\r\n        }\r\n    }, [ result ]);\r\n\r\n    return (\r\n        <div>\r\n            <div className='test-info'>\r\n               { wrongAnswers > 0 ? <p className='wrong'>Wrong answers: {wrongAnswers}</p> : '' }\r\n               <p className='time'>Time left <span>{minutes} : {seconds < 10? '0'+seconds : seconds}</span></p>\r\n            </div>\r\n            <div className='test-container'>\r\n               <div className='loading-bar'>\r\n                 <div className='progress' style={barStyle}>\r\n\r\n                 </div>\r\n               </div>\r\n               <h1>{result[currentQuestion] ? result[currentQuestion].question : ''}</h1>\r\n               {result[currentQuestion]  ? result[currentQuestion].answers.map((question, index) => {\r\n                   return (\r\n                    <div className='answer' key={index} onClick={()=>changeStyles(index)}>\r\n                        <div className='left'>\r\n                                <div className='circle'>\r\n                                   <div style={circleStyles[index]}></div>\r\n                                </div>\r\n                        </div>\r\n                        <p className='value'>{question.value}</p>\r\n                        {correctAnswerIndex === index && step === 1 ? <p className='result correct'>Correct</p> : ''}\r\n                        {correctAnswerIndex != answerIndex && answerIndex === index && step === 1 ? <p className='result wrong'>Incorrect</p> : ''} \r\n                    </div>\r\n                   )\r\n               }) : '' }\r\n\r\n               <div className='buttons'>\r\n                   <button className='comeback' onClick={addComebackQuestion}>Come Back Later</button>\r\n                   <button className='next' \r\n                     onClick={giveResult}\r\n                     style={buttonStyle}>{ step < 1 ? 'Give Answer' : 'Next Question'}</button>\r\n               </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TestMiddle\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Result({\r\n  renderMistakesOrResult,\r\n  setRenderMistakesOrResult,\r\n  correctAnswers,\r\n  wrongAnswers,\r\n  wrongAnswersArray,\r\n  result\r\n}) {\r\n    \r\n    const [ svgStyles, setSvgStyles ] = useState(window.innerWidth > 400 ? {cy: 162, cx: 162, r: 148} : {cy: 148, cx: 148, r: 134});\r\n    const [ changeStyle, setChangeStyle ] = useState(wrongAnswersArray.length > 0 ? { background:'#54a0ff', borderColor:'#54a0ff' } : { background:'#D1D1D1', borderColor:'#D1D1D1' })\r\n    const correctPercentage = Math.floor(20 * correctAnswers);\r\n    const strokePercentage = 929 - (correctPercentage / 100) * 929;\r\n    const style = {\r\n        strokeDashoffset:strokePercentage\r\n    };\r\n    \r\n    return (\r\n      <div>\r\n        {renderMistakesOrResult === 'result' ? \r\n          <div className='result-container'>\r\n              <div className='circle-container'>\r\n                <svg className='circle'>\r\n                  <circle style={style} className='circle-svg' cx={svgStyles.cx} cy={svgStyles.cy} r={svgStyles.r} stroke=\"#54a0ff\" strokeWidth=\"28\" fill=\"transparent\" /> \r\n                </svg> \r\n                <div className='background'>\r\n\r\n                </div>\r\n                <div className='interior'>\r\n\r\n                </div>\r\n                <p>{correctPercentage}%</p>\r\n              </div>\r\n              {wrongAnswers < 3 && correctAnswers > 2 ? <div className='failorsuccess'>You passed! Congratulations!</div> : <div className='failorsuccess'>You failed. Good luck next time!</div> }\r\n              <h1>Your results</h1>\r\n              <p>Wrong Answers : {wrongAnswers}</p>\r\n              <p>Correct Answers : {correctAnswers}</p>\r\n              <div className='result-buttons'>\r\n                <div className='result-buttons-middle'>\r\n                    <Link to='/'><button className='try'>Try Again</button></Link>\r\n                    <button style={changeStyle} onClick={()=>{\r\n                    if(wrongAnswersArray.length > 0){\r\n                      setRenderMistakesOrResult('mistakes');\r\n                    } \r\n                    }}>See Wrong Answers</button>\r\n                </div>\r\n              </div>\r\n          </div> : <div className='wrong-answers-container'>\r\n              {wrongAnswersArray.map((answer, index) => {\r\n                  return (\r\n                    <div className='wrong-answer' key={index + 10}>\r\n                        <h1>{result[answer.questionIndex].question}</h1>\r\n                        {result[answer.questionIndex].answers.map((a, index) => {\r\n                          if(a.isCorrect === 'true') {\r\n                            return (<p key={index + 20} className='correct'>{a.value}</p>);\r\n                          } else if( index === answer.yourAnswer ){\r\n                            return(<p key={index + 20} className='wrong'>{a.value}</p>)\r\n                          } else {\r\n                            return (<p key={index + 20} >{a.value}</p>);\r\n                          };\r\n                        })}\r\n                    </div>\r\n                        )\r\n              })}\r\n              <button onClick={()=>setRenderMistakesOrResult('result')}>Go Back</button>\r\n          </div>}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Result\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport TestMiddle from './TestMiddle';\r\nimport Result from './Result'\r\n\r\nfunction Test({ params, setLoading }) {\r\n\r\n    const returnRandom = () => Math.floor(Math.random() * 10);\r\n\r\n    const returnUniqueQuestion = arr => {\r\n         let result = returnRandom();\r\n         let isDuplicate = false;\r\n\r\n         arr.forEach(el => {\r\n            if(el === result) isDuplicate = true;\r\n         });\r\n         if(!isDuplicate) {\r\n            return result;\r\n         } else { \r\n            return returnUniqueQuestion(arr);\r\n         };\r\n    }\r\n\r\n    const removeFromArray = (arr, index) => {\r\n       const length = arr.length;\r\n       for(let i = index; i < length; i++){\r\n            arr[i] = arr[i + 1];\r\n       }\r\n       arr.pop();\r\n    }\r\n\r\n    const findIndexInArray = (arr, el) => {\r\n      const length = arr.length;\r\n      let result;\r\n      for(let i = 0; i < length; i++){\r\n           if(arr[i] === el) result = i;\r\n      }\r\n      return result;\r\n    }\r\n\r\n    const changeQuestion = () => {\r\n         const newArray = usedQuestions;\r\n         const newComeback = comebackQuestions;\r\n         const usedLength = usedQuestions.length;\r\n         const comebackLength = comebackQuestions.length;\r\n         let newQuestion;\r\n         if(comebackLength > 0 && usedLength === 5) {\r\n            const random = Math.floor(Math.random() * comebackLength );\r\n            newQuestion = newComeback[random];\r\n            const index = findIndexInArray(newComeback, newQuestion);\r\n            removeFromArray(newComeback, index);\r\n            setComebackQuestions(newComeback);\r\n         } else {\r\n            newQuestion = returnUniqueQuestion(newArray);\r\n            newArray.push(newQuestion);\r\n            setUsedQuestions(newArray);\r\n         }\r\n         setCurrentQuestion(newQuestion);\r\n         setCorrectAnswerIndex(returnAnswerIndex(result[newQuestion].answers))\r\n    };\r\n\r\n    const returnAnswerIndex = arr => {\r\n         let res;\r\n         arr.forEach((el, index) => {\r\n            if(el.isCorrect === 'true') {\r\n               res = index;\r\n            };\r\n         });\r\n         return res;\r\n    }\r\n\r\n    const [ answeredQuestions, setAnsweredQuestions ] = useState(0);\r\n    const [ renderMistakesOrResult, setRenderMistakesOrResult ] = useState('result')\r\n    const [ minutes, setMinutes ] = useState(5);\r\n    const [ seconds, setSeconds ] = useState(0);\r\n    const [ correctAnswerIndex, setCorrectAnswerIndex ] = useState();\r\n    const [ result, setResult ] = useState([]);\r\n    const [ usedQuestions, setUsedQuestions ] = useState([]);\r\n    const [ currentQuestion, setCurrentQuestion ] = useState(returnRandom());\r\n    const [ comebackQuestions, setComebackQuestions ] = useState([]);\r\n    const [ wrongAnswersArray, setWrongAnswersArray ] = useState([]);\r\n    const [ wrongAnswers, setWrongAnswers ] = useState(0);\r\n    const [ correctAnswers, setCorrectAnswers ] = useState(0);\r\n\r\n    const deductTime = () => {\r\n      let mins = 5;\r\n      let secs = 0;\r\n      const timer = setInterval(()=>{\r\n         if(secs === 0) {\r\n            secs = 59;\r\n            mins--;\r\n            setSeconds(secs);\r\n            setMinutes(mins);\r\n         } else {\r\n            secs--;\r\n            setSeconds(secs);\r\n         }\r\n      }, 1000)\r\n\r\n      if(mins === 0 && secs ===0){\r\n         clearInterval(timer);\r\n         mins = undefined;\r\n         secs = undefined;\r\n      }\r\n      return timer;\r\n    }\r\n\r\n    const fetchTest = async () => {\r\n       const path = '/server/tests/' + params.category;\r\n       try { \r\n            const res = await axios.get(path);\r\n            const newUsedQuestions = [currentQuestion];\r\n            setCorrectAnswerIndex(returnAnswerIndex(res.data[currentQuestion].answers));\r\n            setUsedQuestions(newUsedQuestions);\r\n            setResult(res.data);\r\n       } catch (err) {\r\n            console.log(err);\r\n       };\r\n    };\r\n\r\n    const checkAnswer = index => {\r\n       if(result[currentQuestion].answers[index].isCorrect === 'true'){\r\n           setCorrectAnswers(answers => answers + 1);\r\n       } else {\r\n           setWrongAnswers(answers => answers + 1);\r\n       };\r\n    };\r\n\r\n    useEffect(()=>{\r\n       fetchTest();\r\n       const timer = deductTime();\r\n       \r\n       return () => clearInterval(timer);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {((wrongAnswers < 3) && (wrongAnswers + correctAnswers) != 5) && (minutes >= 0 && seconds >= 0) ? \r\n            <TestMiddle \r\n               answeredQuestions={answeredQuestions}\r\n               setAnsweredQuestions={setAnsweredQuestions}\r\n               setLoading={setLoading}\r\n               minutes={minutes}\r\n               seconds={seconds}\r\n               comebackQuestions={comebackQuestions}\r\n               setComebackQuestions={setComebackQuestions}\r\n               wrongAnswersArray={wrongAnswersArray}\r\n               setWrongAnswersArray={setWrongAnswersArray}\r\n               correctAnswerIndex={correctAnswerIndex}\r\n               wrongAnswers={wrongAnswers}\r\n               checkAnswer={checkAnswer}\r\n               changeQuestion={changeQuestion} \r\n               currentQuestion={currentQuestion} \r\n               result={result}\r\n               usedQuestions={usedQuestions} /> : \r\n            <Result \r\n                  renderMistakesOrResult={renderMistakesOrResult}\r\n                  setRenderMistakesOrResult={setRenderMistakesOrResult}\r\n                  wrongAnswers={wrongAnswers}\r\n                  correctAnswers={correctAnswers}\r\n                  wrongAnswersArray={wrongAnswersArray}\r\n                  result={result}\r\n            /> }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Test;\r\n","import React from 'react'\r\n\r\nfunction Loading({ loading }) {\r\n\r\n    return (\r\n    <>\r\n        {loading === true ? \r\n        <div className='loading-screen'>\r\n         <svg className='circle'>\r\n           <circle className='circle-svg' cx=\"50\" cy=\"50\" r=\"36\" stroke=\"#137CFF\" strokeWidth=\"5\" fill=\"transparent\" />  \r\n         </svg> \r\n        </div> : ''}\r\n    </> \r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import { Route } from 'react-router-dom';\nimport { useState } from 'react';\n\nimport Menu from './components/Menu'\nimport Home from './components/Home'\nimport Test from './components/Test'\nimport Loading from './components/Loading';\n\nfunction App() {     \n  \n  const [ loading, setLoading ] = useState(true);\n\n  return (\n    <div className=\"App\">\n        <Loading loading={loading}/>\n        <Menu />\n        <div className='middle-container'>\n           <Route exact path='/' component={()=><Home setLoading={setLoading} />}></Route>\n           <Route exact path='/quiz/:category' component={({ match : { params } })=><Test params={params} setLoading={setLoading}/>}></Route>\n        </div>\n    </div>\n  );\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n   <BrowserRouter>\n      <App />\n   </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}